name: CI Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  test-normal-mode-time-based:
    name: Test normal mode (time-based)
    runs-on: ubuntu-latest
    if: github.repository_owner == 'luxass'
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: create old test cache
        run: echo "old-cache" | tee old-file.txt

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: old-file.txt
          key: test-cache-old-${{ github.run_id }}

      - name: wait 10 seconds
        run: sleep 10

      - name: create new test cache
        run: echo "new-cache" | tee new-file.txt

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: new-file.txt
          key: test-cache-new-${{ github.run_id }}

      - name: wait 2 seconds to ensure cache is registered
        run: sleep 2

      - name: purge old caches (older than 8 seconds)
        uses: ./
        with:
          mode: normal
          debug: "true"
          max-age: 8
          filter-key: last_accessed_at

      - name: verify old cache was deleted and new cache still exists
        run: |
          # List remaining caches
          gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }}

          # Check that old cache is gone (should fail to restore)
          if gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }} | grep -q "test-cache-old-${{ github.run_id }}"; then
            echo "ERROR: Old cache still exists!"
            exit 1
          fi

          # Check that new cache still exists
          if ! gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }} | grep -q "test-cache-new-${{ github.run_id }}"; then
            echo "ERROR: New cache was incorrectly deleted!"
            exit 1
          fi

          echo "SUCCESS: Old cache deleted, new cache preserved"
        env:
          GH_TOKEN: ${{ github.token }}

  test-normal-mode-created-at-filter:
    name: Test normal mode with created_at filter
    runs-on: ubuntu-latest
    if: github.repository_owner == 'luxass'
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: create test cache 1
        run: echo "test1" | tee file1.txt

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: file1.txt
          key: test-created-at-cache-${{ github.run_id }}

      - name: wait 8 seconds
        run: sleep 8

      - name: purge caches using created_at filter (older than 5 seconds)
        uses: ./
        with:
          mode: normal
          debug: "true"
          max-age: 5
          filter-key: created_at

      - name: verify cache was deleted
        run: |
          if gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }} | grep -q "test-created-at-cache-${{ github.run_id }}"; then
            echo "ERROR: Cache still exists!"
            exit 1
          fi
          echo "SUCCESS: Cache was deleted based on created_at"
        env:
          GH_TOKEN: ${{ github.token }}

  test-normal-mode-with-ref:
    name: Test normal mode with specific ref
    runs-on: ubuntu-latest
    if: github.repository_owner == 'luxass'
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: create test cache
        run: echo "ref-test" | tee ref-file.txt

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ref-file.txt
          key: test-ref-cache-${{ github.run_id }}

      - name: wait 3 seconds
        run: sleep 3

      - name: purge old caches for current ref (older than 2 seconds)
        uses: ./
        with:
          mode: normal
          debug: "true"
          max-age: 2
          ref-key: ${{ github.ref }}

      - name: verify cache was deleted
        run: |
          if gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }} | grep -q "test-ref-cache-${{ github.run_id }}"; then
            echo "ERROR: Cache still exists!"
            exit 1
          fi
          echo "SUCCESS: Cache was deleted for specific ref"
        env:
          GH_TOKEN: ${{ github.token }}

  test-all-mode:
    name: Test all mode
    runs-on: ubuntu-latest
    if: github.repository_owner == 'luxass'
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: create test caches
        run: |
          echo "all-test-1" | tee all-file1.txt
          echo "all-test-2" | tee all-file2.txt

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: all-file1.txt
          key: test-all-cache-1-${{ github.run_id }}

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: all-file2.txt
          key: test-all-cache-2-${{ github.run_id }}

      - name: purge all caches
        uses: ./
        with:
          mode: all
          debug: "true"

      - name: verify all caches were deleted
        run: |
          # Check that both caches are gone
          echo "Listing remaining caches..."
          gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }}

          REMAINING=$(gh cache list --repo ${{ github.repository }} --ref ${{ github.ref }} | grep -c "test-all-cache-" || true)
          echo "Found $REMAINING cache(s) matching 'test-all-cache-'"

          if [ "$REMAINING" != "0" ] && [ -n "$REMAINING" ]; then
            echo "ERROR: $REMAINING cache(s) still exist!"
            exit 1
          fi
          echo "SUCCESS: All caches were deleted (found $REMAINING matching caches)"
        env:
          GH_TOKEN: ${{ github.token }}
